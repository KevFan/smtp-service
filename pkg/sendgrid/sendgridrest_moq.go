// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package sendgrid

import (
	"github.com/sendgrid/rest"
	"sync"
)

var (
	lockRESTClientMockBuildRequest  sync.RWMutex
	lockRESTClientMockInvokeRequest sync.RWMutex
)

// Ensure, that RESTClientMock does implement RESTClient.
// If this is not the case, regenerate this file with moq.
var _ RESTClient = &RESTClientMock{}

// RESTClientMock is a mock implementation of RESTClient.
//
//     func TestSomethingThatUsesRESTClient(t *testing.T) {
//
//         // make and configure a mocked RESTClient
//         mockedRESTClient := &RESTClientMock{
//             BuildRequestFunc: func(endpoint string, method rest.Method) rest.Request {
// 	               panic("mock out the BuildRequest method")
//             },
//             InvokeRequestFunc: func(request rest.Request) (*rest.Response, error) {
// 	               panic("mock out the InvokeRequest method")
//             },
//         }
//
//         // use mockedRESTClient in code that requires RESTClient
//         // and then make assertions.
//
//     }
type RESTClientMock struct {
	// BuildRequestFunc mocks the BuildRequest method.
	BuildRequestFunc func(endpoint string, method rest.Method) rest.Request

	// InvokeRequestFunc mocks the InvokeRequest method.
	InvokeRequestFunc func(request rest.Request) (*rest.Response, error)

	// calls tracks calls to the methods.
	calls struct {
		// BuildRequest holds details about calls to the BuildRequest method.
		BuildRequest []struct {
			// Endpoint is the endpoint argument value.
			Endpoint string
			// Method is the method argument value.
			Method rest.Method
		}
		// InvokeRequest holds details about calls to the InvokeRequest method.
		InvokeRequest []struct {
			// Request is the request argument value.
			Request rest.Request
		}
	}
}

// BuildRequest calls BuildRequestFunc.
func (mock *RESTClientMock) BuildRequest(endpoint string, method rest.Method) rest.Request {
	if mock.BuildRequestFunc == nil {
		panic("RESTClientMock.BuildRequestFunc: method is nil but RESTClient.BuildRequest was just called")
	}
	callInfo := struct {
		Endpoint string
		Method   rest.Method
	}{
		Endpoint: endpoint,
		Method:   method,
	}
	lockRESTClientMockBuildRequest.Lock()
	mock.calls.BuildRequest = append(mock.calls.BuildRequest, callInfo)
	lockRESTClientMockBuildRequest.Unlock()
	return mock.BuildRequestFunc(endpoint, method)
}

// BuildRequestCalls gets all the calls that were made to BuildRequest.
// Check the length with:
//     len(mockedRESTClient.BuildRequestCalls())
func (mock *RESTClientMock) BuildRequestCalls() []struct {
	Endpoint string
	Method   rest.Method
} {
	var calls []struct {
		Endpoint string
		Method   rest.Method
	}
	lockRESTClientMockBuildRequest.RLock()
	calls = mock.calls.BuildRequest
	lockRESTClientMockBuildRequest.RUnlock()
	return calls
}

// InvokeRequest calls InvokeRequestFunc.
func (mock *RESTClientMock) InvokeRequest(request rest.Request) (*rest.Response, error) {
	if mock.InvokeRequestFunc == nil {
		panic("RESTClientMock.InvokeRequestFunc: method is nil but RESTClient.InvokeRequest was just called")
	}
	callInfo := struct {
		Request rest.Request
	}{
		Request: request,
	}
	lockRESTClientMockInvokeRequest.Lock()
	mock.calls.InvokeRequest = append(mock.calls.InvokeRequest, callInfo)
	lockRESTClientMockInvokeRequest.Unlock()
	return mock.InvokeRequestFunc(request)
}

// InvokeRequestCalls gets all the calls that were made to InvokeRequest.
// Check the length with:
//     len(mockedRESTClient.InvokeRequestCalls())
func (mock *RESTClientMock) InvokeRequestCalls() []struct {
	Request rest.Request
} {
	var calls []struct {
		Request rest.Request
	}
	lockRESTClientMockInvokeRequest.RLock()
	calls = mock.calls.InvokeRequest
	lockRESTClientMockInvokeRequest.RUnlock()
	return calls
}
